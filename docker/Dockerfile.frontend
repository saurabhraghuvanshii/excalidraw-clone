FROM node:20-alpine AS base

RUN npm install -g pnpm

WORKDIR /usr/src/app

ARG DATABASE_URL
ARG JWT_SECRET
ARG NEXT_PUBLIC_HTTP_BACKEND
ARG NEXT_PUBLIC_WS_BACKEND

COPY ./package.json ./package.json
COPY ./pnpm-lock.yaml ./pnpm-lock.yaml
COPY ./pnpm-workspace.yaml ./pnpm-workspace.yaml
COPY ./turbo.json ./turbo.json

COPY ./packages ./packages
COPY ./apps/drawnew ./apps/drawnew

RUN pnpm install

RUN pnpm run db:generate

ENV DATABASE_URL=${DATABASE_URL}
ENV JWT_SECRET=${JWT_SECRET}
ENV NEXT_PUBLIC_HTTP_BACKEND=${NEXT_PUBLIC_HTTP_BACKEND}
ENV NEXT_PUBLIC_WS_BACKEND=${NEXT_PUBLIC_WS_BACKEND}
ENV IS_DOCKERIZED=true

WORKDIR /usr/src/app/apps/drawnew
RUN echo "JWT_SECRET=$JWT_SECRET" > .env
RUN echo "DATABASE_URL=$DATABASE_URL" >> .env
RUN echo "NEXT_PUBLIC_HTTP_BACKEND=$NEXT_PUBLIC_HTTP_BACKEND" >> .env
RUN echo "NEXT_PUBLIC_WS_BACKEND=$NEXT_PUBLIC_WS_BACKEND" >> .env
RUN echo "IS_DOCKERIZED=true" >> .env

WORKDIR /usr/src/app
RUN pnpm run build

EXPOSE 3000

CMD ["pnpm", "run", "start:drawnew"]
